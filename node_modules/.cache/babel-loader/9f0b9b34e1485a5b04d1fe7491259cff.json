{"ast":null,"code":"import _classCallCheck from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/universa_localis/src/Mrp/container/mrpStatus.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MrpForm from \"./mrpForm\";\nimport MrpResult from \"../components/mrpResult\";\nimport Loading from \"../../components/loading\";\nimport Failure from \"../../components/failure\";\n\nvar MrpStatus =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MrpStatus, _Component);\n\n  function MrpStatus() {\n    _classCallCheck(this, MrpStatus);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MrpStatus).apply(this, arguments));\n  }\n\n  _createClass(MrpStatus, [{\n    key: \"render\",\n    value: function render() {\n      var renderedMrp;\n\n      if (!this.props.default) {\n        renderedMrp = React.createElement(MrpForm, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.error) {\n        renderedMrp = React.createElement(MrpForm, {\n          errorText: \"Sorry! There are no pictures taken by this rover on this date.\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.loading) {\n        renderedMrp = React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.showResult) {\n        renderedMrp = React.createElement(MrpResult, {\n          receivedInfo: this.props.receivedInfo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.failure) {\n        renderedMrp = React.createElement(Failure, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, renderedMrp);\n    }\n  }]);\n\n  return MrpStatus;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    default: state.default,\n    error: state.error,\n    loading: state.isLoading,\n    showResult: state.showResult,\n    receivedInfo: state.receivedInfo,\n    failure: state.isFailure\n  };\n};\n\nvar mrpStatusConnected = connect(mapStateToProps)(MrpStatus);\nexport default mrpStatusConnected;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/universa_localis/src/Mrp/container/mrpStatus.js"],"names":["React","Component","connect","MrpForm","MrpResult","Loading","Failure","MrpStatus","renderedMrp","props","default","error","loading","showResult","receivedInfo","failure","mapStateToProps","state","isLoading","isFailure","mrpStatusConnected"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;IAEMC,S;;;;;;;;;;;;;6BACK;AACP,UAAIC,WAAJ;;AAEA,UAAI,CAAC,KAAKC,KAAL,CAAWC,OAAhB,EAAyB;AACvBF,QAAAA,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACD;;AAED,UAAI,KAAKC,KAAL,CAAWE,KAAf,EAAsB;AACpBH,QAAAA,WAAW,GACT,oBAAC,OAAD;AACE,UAAA,SAAS,EACP,gEAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,UAAI,KAAKC,KAAL,CAAWG,OAAf,EAAwB;AACtBJ,QAAAA,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACD;;AAED,UAAI,KAAKC,KAAL,CAAWI,UAAf,EAA2B;AACzBL,QAAAA,WAAW,GAAG,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAE,KAAKC,KAAL,CAAWK,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACD;;AAED,UAAI,KAAKL,KAAL,CAAWM,OAAf,EAAwB;AACtBP,QAAAA,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACD;;AAED,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,WAAN,CAAP;AACD;;;;EA/BqBP,S;;AAkCxB,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLP,IAAAA,OAAO,EAAEO,KAAK,CAACP,OADV;AAELC,IAAAA,KAAK,EAAEM,KAAK,CAACN,KAFR;AAGLC,IAAAA,OAAO,EAAEK,KAAK,CAACC,SAHV;AAILL,IAAAA,UAAU,EAAEI,KAAK,CAACJ,UAJb;AAKLC,IAAAA,YAAY,EAAEG,KAAK,CAACH,YALf;AAMLC,IAAAA,OAAO,EAAEE,KAAK,CAACE;AANV,GAAP;AAQD,CATD;;AAWA,IAAMC,kBAAkB,GAAGlB,OAAO,CAACc,eAAD,CAAP,CAAyBT,SAAzB,CAA3B;AACA,eAAea,kBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MrpForm from \"./mrpForm\";\nimport MrpResult from \"../components/mrpResult\";\nimport Loading from \"../../components/loading\";\nimport Failure from \"../../components/failure\";\n\nclass MrpStatus extends Component {\n  render() {\n    let renderedMrp;\n\n    if (!this.props.default) {\n      renderedMrp = <MrpForm />;\n    }\n\n    if (this.props.error) {\n      renderedMrp = (\n        <MrpForm\n          errorText={\n            \"Sorry! There are no pictures taken by this rover on this date.\"\n          }\n        />\n      );\n    }\n\n    if (this.props.loading) {\n      renderedMrp = <Loading />;\n    }\n\n    if (this.props.showResult) {\n      renderedMrp = <MrpResult receivedInfo={this.props.receivedInfo} />;\n    }\n\n    if (this.props.failure) {\n      renderedMrp = <Failure />;\n    }\n\n    return <div>{renderedMrp}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    default: state.default,\n    error: state.error,\n    loading: state.isLoading,\n    showResult: state.showResult,\n    receivedInfo: state.receivedInfo,\n    failure: state.isFailure\n  };\n};\n\nconst mrpStatusConnected = connect(mapStateToProps)(MrpStatus);\nexport default mrpStatusConnected;\n"]},"metadata":{},"sourceType":"module"}