{"ast":null,"code":"import _classCallCheck from \"/Users/macbookpro/Desktop/first-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/first-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/first-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/first-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/first-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/macbookpro/Desktop/first-project/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/first-project/client/src/components/Main.js\";\nimport React, { Component } from \"react\";\nimport \"./TextFields/Main.css\";\nimport Autosuggest from \"react-autosuggest\";\nimport Button from \"@material-ui/core/Button\";\nimport { artists } from \"./TextFields/Artists\";\nimport Movements from \"./TextFields/Movements\";\nimport Centuries from \"./TextFields/Centuries\";\nimport Branches from \"./TextFields/Branches\";\nimport { artistUpdate, movementUpdate, centuryUpdate, branchUpdate, fetchStart } from \"../Actions/Actions\";\n\nvar getSuggestion = function getSuggestion(value, getState) {\n  var inputValue = value.trim().toLowerCase();\n  var inputLength = inputValue.length;\n  return inputLength === 0 ? [] : getState().form.filter(function (lang) {\n    return lang.name.toLowerCase().slice(0, inputLength) === inputValue;\n  });\n};\n\nvar getSuggestionValue = function getSuggestionValue(suggestion) {\n  return suggestion.name;\n};\n\nvar renderSuggestion = function renderSuggestion(suggestion) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, suggestion.name);\n};\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n\n    _this.onChange = function (event, _ref) {\n      var newValue = _ref.newValue;\n\n      _this.setState({\n        value: newValue\n      });\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      value: \"\",\n      suggestions: []\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var value = event.target.value;\n\n      if (event.target.name === \"artist\") {\n        this.props.dispatch(artistUpdate(value));\n      }\n\n      if (event.target.name === \"movement\") {\n        this.props.dispatch(movementUpdate(value));\n      }\n\n      if (event.target.name === \"century\") {\n        this.props.dispatch(centuryUpdate(value));\n      }\n\n      if (event.target.name === \"branch\") {\n        this.props.dispatch(branchUpdate(value));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions; // Autosuggest will pass through all these props to the input.\n\n      var inputProps = {\n        placeholder: \"Search Artist\",\n        value: value,\n        onChange: this.onChange\n      };\n      return React.createElement(\"form\", {\n        onSubmit: function onSubmit() {\n          return _this2.props.dispatch(fetchStart());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        inputProps: inputProps,\n        value: this.props.artist,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        style: {\n          position: \"relative\",\n          bottom: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/first-project/client/src/components/Main.js"],"names":["React","Component","Autosuggest","Button","artists","Movements","Centuries","Branches","artistUpdate","movementUpdate","centuryUpdate","branchUpdate","fetchStart","getSuggestion","value","getState","inputValue","trim","toLowerCase","inputLength","length","form","filter","lang","name","slice","getSuggestionValue","suggestion","renderSuggestion","Main","props","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","getSuggestions","onSuggestionsClearRequested","handleChange","bind","state","target","dispatch","inputProps","placeholder","artist","position","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./TextFields/Main.css\";\nimport Autosuggest from \"react-autosuggest\";\nimport Button from \"@material-ui/core/Button\";\nimport { artists } from \"./TextFields/Artists\";\nimport Movements from \"./TextFields/Movements\";\nimport Centuries from \"./TextFields/Centuries\";\nimport Branches from \"./TextFields/Branches\";\nimport {\n  artistUpdate,\n  movementUpdate,\n  centuryUpdate,\n  branchUpdate,\n  fetchStart\n} from \"../Actions/Actions\";\n\nconst getSuggestion = (value, getState) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0\n    ? []\n    : getState().form.filter(\n        lang => lang.name.toLowerCase().slice(0, inputLength) === inputValue\n      );\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\nconst renderSuggestion = suggestion => <div>{suggestion.name}</div>;\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      value: \"\",\n      suggestions: []\n    };\n  }\n\n  handleChange(event) {\n    let value = event.target.value;\n    if (event.target.name === \"artist\") {\n      this.props.dispatch(artistUpdate(value));\n    }\n    if (event.target.name === \"movement\") {\n      this.props.dispatch(movementUpdate(value));\n    }\n    if (event.target.name === \"century\") {\n      this.props.dispatch(centuryUpdate(value));\n    }\n    if (event.target.name === \"branch\") {\n      this.props.dispatch(branchUpdate(value));\n    }\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  // Autosuggest will call this function every time you need to clear suggestions.\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: \"Search Artist\",\n      value,\n      onChange: this.onChange\n    };\n\n    return (\n      <form onSubmit={() => this.props.dispatch(fetchStart())}>\n        <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps}\n          value={this.props.artist}\n          onChange={this.handleChange}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ position: \"relative\", bottom: 50 }}\n        >\n          Submit\n        </Button>\n      </form>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}