{"ast":null,"code":"import _classCallCheck from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/universa_localis/src/Contact/container/contact.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { nameUpdate, emailUpdate, messageUpdate, validateForm } from \"../../actions/contactActions/actions\";\nimport { Animated } from \"react-animated-css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr\",\n      placeSelf: \"center\",\n      width: 400,\n      borderRadius: 20,\n      backgroundColor: \"rgba(200, 200, 200, .5)\"\n    },\n    contact: {\n      position: \"relative\",\n      bottom: 80\n    },\n    home: {\n      color: \"#d8dcf2\",\n      fontSize: \"2rem\",\n      fontFamily: \"Lobster, cursive\",\n      textDecoration: \"underline\",\n      textDecorationColor: \"#e040fb\",\n      float: \"left\"\n    },\n    buttonContainer: {\n      width: \"95%\",\n      display: \"block\"\n    },\n    button: {\n      marginTop: 20,\n      backgroundColor: \"#e040fb\"\n    },\n    header: {\n      marginTop: \"1em\",\n      fontFamily: \"Righteous\",\n      color: \"#d8dcf2\",\n      fontSize: \"5em\"\n    },\n    helper: {\n      color: \"#d8dcf2\",\n      fontSize: \"1.5rem\",\n      fontFamily: \"Quicksand\"\n    },\n    form: {\n      width: 300,\n      marginBottom: 20,\n      alignSelf: \"center\"\n    },\n    button1: {\n      marginTop: 20,\n      backgroundColor: \"#e040fb\"\n    }\n  };\n};\n\nvar Contact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contact, _Component);\n\n  function Contact(props) {\n    var _this;\n\n    _classCallCheck(this, Contact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Contact).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Contact, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var value = event.target.value;\n\n      if (event.target.name === \"name\") {\n        this.props.dispatch(nameUpdate(value));\n      }\n\n      if (event.target.name === \"email\") {\n        this.props.dispatch(emailUpdate(value));\n      }\n\n      if (event.target.name === \"message\") {\n        this.props.dispatch(messageUpdate(value));\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      this.props.dispatch(validateForm());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var showNameError;\n      var showEmailError;\n      var showMessageError;\n\n      if (this.props.errorFound) {\n        this.props.errorArray.forEach(function (error) {\n          if (error === 1) {\n            showNameError = \"Name field can't be empty!\";\n          } else if (error === 2) {\n            showEmailError = \"Email address is not valid!\";\n          } else if (error === 3) {\n            showEmailError = \"Email field can't be empty! \";\n          } else if (error === 4) {\n            showMessageError = \"Message field can't be empty!\";\n          }\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: classes.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Animated, {\n        animationIn: \"fadeInRight\",\n        animationOut: \"fadeOut\",\n        isVisible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"home\",\n        className: classes.home,\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Universa Localis\")), React.createElement(\"div\", {\n        id: \"bb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"buttons\",\n        className: classes.buttons,\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Home\"), React.createElement(Button, {\n        id: \"buttons\",\n        className: classes.buttons,\n        href: \"about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"About\"), React.createElement(Button, {\n        id: \"buttons\",\n        className: classes.buttons,\n        href: \"contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Contact\"))), React.createElement(\"div\", {\n        className: classes.contact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: classes.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Contact\"), React.createElement(\"p\", {\n        className: classes.helper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"We'd like to hear from you!\"), React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        required: true,\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        name: \"name\",\n        label: \"Name\",\n        value: this.props.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, showNameError)), React.createElement(FormControl, {\n        required: true,\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        className: classes.field,\n        name: \"email\",\n        label: \"Email\",\n        value: this.props.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, showEmailError)), React.createElement(FormControl, {\n        required: true,\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        name: \"message\",\n        label: \"Message\",\n        multiline: \"true\",\n        rows: 5,\n        value: this.props.message,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, showMessageError))), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button1,\n        type: \"submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(BottomNavigation, {\n        showLabels: true,\n        id: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(BottomNavigationAction, {\n        id: \"link\",\n        label: \"Home\",\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(BottomNavigationAction, {\n        id: \"link\",\n        label: \"About\",\n        href: \"about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(BottomNavigationAction, {\n        id: \"link\",\n        label: \"Contact\",\n        href: \"contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"copyright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"\\xA9 copyright Mehmet Tansu I\\u015F\\u0131kl\\u0131\")));\n    }\n  }]);\n\n  return Contact;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  state = state.ContactReducer;\n  return {\n    name: state.form.name,\n    email: state.form.email,\n    message: state.form.message,\n    errorArray: state.errorArray\n  };\n};\n\nContact.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar withstyles = withStyles(styles)(Contact);\nvar contactConnected = connect(mapStateToProps)(withstyles);\nexport default contactConnected;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/universa_localis/src/Contact/container/contact.js"],"names":["React","Component","connect","PropTypes","Toolbar","nameUpdate","emailUpdate","messageUpdate","validateForm","Animated","withStyles","FormControl","FormHelperText","TextField","Button","BottomNavigation","BottomNavigationAction","styles","theme","root","display","gridTemplateColumns","placeSelf","width","borderRadius","backgroundColor","contact","position","bottom","home","color","fontSize","fontFamily","textDecoration","textDecorationColor","float","buttonContainer","button","marginTop","header","helper","form","marginBottom","alignSelf","button1","Contact","props","handleChange","bind","handleSubmit","event","value","target","name","dispatch","classes","showNameError","showEmailError","showMessageError","errorFound","errorArray","forEach","error","buttons","field","email","message","mapStateToProps","state","ContactReducer","propTypes","object","isRequired","withstyles","contactConnected"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {\n  nameUpdate,\n  emailUpdate,\n  messageUpdate,\n  validateForm\n} from \"../../actions/contactActions/actions\";\nimport { Animated } from \"react-animated-css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\n\nconst styles = theme => ({\n  root: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr\",\n    placeSelf: \"center\",\n    width: 400,\n    borderRadius: 20,\n    backgroundColor: \"rgba(200, 200, 200, .5)\"\n  },\n  contact: {\n    position: \"relative\",\n    bottom: 80\n  },\n  home: {\n    color: \"#d8dcf2\",\n    fontSize: \"2rem\",\n    fontFamily: \"Lobster, cursive\",\n    textDecoration: \"underline\",\n    textDecorationColor: \"#e040fb\",\n    float: \"left\"\n  },\n  buttonContainer: {\n    width: \"95%\",\n    display: \"block\"\n  },\n  button: {\n    marginTop: 20,\n    backgroundColor: \"#e040fb\"\n  },\n  header: {\n    marginTop: \"1em\",\n    fontFamily: \"Righteous\",\n    color: \"#d8dcf2\",\n    fontSize: \"5em\"\n  },\n  helper: {\n    color: \"#d8dcf2\",\n    fontSize: \"1.5rem\",\n    fontFamily: \"Quicksand\"\n  },\n  form: {\n    width: 300,\n    marginBottom: 20,\n    alignSelf: \"center\"\n  },\n  button1: {\n    marginTop: 20,\n    backgroundColor: \"#e040fb\"\n  }\n});\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let value = event.target.value;\n    if (event.target.name === \"name\") {\n      this.props.dispatch(nameUpdate(value));\n    }\n    if (event.target.name === \"email\") {\n      this.props.dispatch(emailUpdate(value));\n    }\n    if (event.target.name === \"message\") {\n      this.props.dispatch(messageUpdate(value));\n    }\n  }\n\n  handleSubmit() {\n    this.props.dispatch(validateForm());\n  }\n\n  render() {\n    const { classes } = this.props;\n    let showNameError;\n    let showEmailError;\n    let showMessageError;\n\n    if (this.props.errorFound) {\n      this.props.errorArray.forEach(error => {\n        if (error === 1) {\n          showNameError = \"Name field can't be empty!\";\n        } else if (error === 2) {\n          showEmailError = \"Email address is not valid!\";\n        } else if (error === 3) {\n          showEmailError = \"Email field can't be empty! \";\n        } else if (error === 4) {\n          showMessageError = \"Message field can't be empty!\";\n        }\n      });\n    }\n\n    return (\n      <React.Fragment>\n        <div id=\"container\">\n          <Toolbar className={classes.buttonContainer}>\n            <Animated\n              animationIn=\"fadeInRight\"\n              animationOut=\"fadeOut\"\n              isVisible={true}\n            >\n              <Button id=\"home\" className={classes.home} href=\"/\">\n                Universa Localis\n              </Button>\n            </Animated>\n            <div id=\"bb\">\n              <Button id=\"buttons\" className={classes.buttons} href=\"/\">\n                Home\n              </Button>\n              <Button id=\"buttons\" className={classes.buttons} href=\"about\">\n                About\n              </Button>\n              <Button id=\"buttons\" className={classes.buttons} href=\"contact\">\n                Contact\n              </Button>\n            </div>\n          </Toolbar>\n\n          <div className={classes.contact}>\n            <h1 className={classes.header}>Contact</h1>\n            <p className={classes.helper}>We'd like to hear from you!</p>\n            <div className={classes.root}>\n              <FormControl required className={classes.form}>\n                <TextField\n                  required\n                  name=\"name\"\n                  label=\"Name\"\n                  value={this.props.name}\n                  onChange={this.handleChange}\n                />\n                <FormHelperText error>{showNameError}</FormHelperText>\n              </FormControl>\n              <FormControl required className={classes.form}>\n                <TextField\n                  required\n                  className={classes.field}\n                  name=\"email\"\n                  label=\"Email\"\n                  value={this.props.email}\n                  onChange={this.handleChange}\n                />\n                <FormHelperText error>{showEmailError}</FormHelperText>\n              </FormControl>\n              <FormControl required className={classes.form}>\n                <TextField\n                  required\n                  name=\"message\"\n                  label=\"Message\"\n                  multiline=\"true\"\n                  rows={5}\n                  value={this.props.message}\n                  onChange={this.handleChange}\n                />\n                <FormHelperText error>{showMessageError}</FormHelperText>\n              </FormControl>\n            </div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button1}\n              type=\"submit\"\n              onClick={this.handleSubmit}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n        <BottomNavigation showLabels id=\"footer\">\n          <BottomNavigationAction id=\"link\" label=\"Home\" href=\"/\" />\n          <BottomNavigationAction id=\"link\" label=\"About\" href=\"about\" />\n          <BottomNavigationAction id=\"link\" label=\"Contact\" href=\"contact\" />\n          <p id=\"copyright\">© copyright Mehmet Tansu Işıklı</p>\n        </BottomNavigation>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  state = state.ContactReducer;\n  return {\n    name: state.form.name,\n    email: state.form.email,\n    message: state.form.message,\n    errorArray: state.errorArray\n  };\n};\n\nContact.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst withstyles = withStyles(styles)(Contact);\nconst contactConnected = connect(mapStateToProps)(withstyles);\nexport default contactConnected;\n"]},"metadata":{},"sourceType":"module"}