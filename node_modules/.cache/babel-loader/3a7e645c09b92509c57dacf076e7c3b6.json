{"ast":null,"code":"import { LOADING, FETCH_SUCCESS, FETCH_FAILURE, SHOW_RESULTS } from \"./action_types\";\nexport function getApod() {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/apod\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var receivedObject = {\n        artist: data.copyright,\n        title: data.title,\n        date: data.date,\n        explanation: data.explanation,\n        link: data.url\n      };\n      dispatch(showResults(receivedObject));\n    });\n  };\n}\nexport function getMrp() {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/mrp\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var receivedArray = {\n        info: data.photos\n      };\n      dispatch(showResults(receivedArray));\n    });\n  };\n}\nexport function showResults(received) {\n  return function (dispatch) {\n    dispatch({\n      type: SHOW_RESULTS,\n      payload: true,\n      receivedObject: received,\n      receivedArray: received\n    });\n  };\n}\nexport function loading() {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING,\n      payload: true\n    });\n  };\n}\nexport function fetchSuccess() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: true\n    });\n  };\n}\nexport function fetchFailure() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: true\n    });\n  };\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/universa_localis/src/actions/formActions/actions.js"],"names":["LOADING","FETCH_SUCCESS","FETCH_FAILURE","SHOW_RESULTS","getApod","dispatch","fetch","then","response","json","data","receivedObject","artist","copyright","title","date","explanation","link","url","showResults","getMrp","receivedArray","info","photos","received","type","payload","loading","fetchSuccess","fetchFailure"],"mappings":"AAAA,SACEA,OADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,YAJF,QAKO,gBALP;AAOA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,UAASC,QAAT,EAAmB;AACxBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,UAAMC,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAEF,IAAI,CAACG,SADQ;AAErBC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFS;AAGrBC,QAAAA,IAAI,EAAEL,IAAI,CAACK,IAHU;AAIrBC,QAAAA,WAAW,EAAEN,IAAI,CAACM,WAJG;AAKrBC,QAAAA,IAAI,EAAEP,IAAI,CAACQ;AALU,OAAvB;AAOAb,MAAAA,QAAQ,CAACc,WAAW,CAACR,cAAD,CAAZ,CAAR;AACD,KAXH;AAYD,GAbD;AAcD;AAED,OAAO,SAASS,MAAT,GAAkB;AACvB,SAAO,UAASf,QAAT,EAAmB;AACxBC,IAAAA,KAAK,CAAC,2BAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,UAAMW,aAAa,GAAG;AACpBC,QAAAA,IAAI,EAAEZ,IAAI,CAACa;AADS,OAAtB;AAGAlB,MAAAA,QAAQ,CAACc,WAAW,CAACE,aAAD,CAAZ,CAAR;AACD,KAPH;AAQD,GATD;AAUD;AAED,OAAO,SAASF,WAAT,CAAqBK,QAArB,EAA+B;AACpC,SAAO,UAASnB,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AACPoB,MAAAA,IAAI,EAAEtB,YADC;AAEPuB,MAAAA,OAAO,EAAE,IAFF;AAGPf,MAAAA,cAAc,EAAEa,QAHT;AAIPH,MAAAA,aAAa,EAAEG;AAJR,KAAD,CAAR;AAMD,GAPD;AAQD;AAED,OAAO,SAASG,OAAT,GAAmB;AACxB,SAAO,UAAStB,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AACPoB,MAAAA,IAAI,EAAEzB,OADC;AAEP0B,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;AAMD;AAED,OAAO,SAASE,YAAT,GAAwB;AAC7B,SAAO,UAASvB,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AACPoB,MAAAA,IAAI,EAAExB,aADC;AAEPyB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;AAMD;AAED,OAAO,SAASG,YAAT,GAAwB;AAC7B,SAAO,UAASxB,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AACPoB,MAAAA,IAAI,EAAEvB,aADC;AAEPwB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;AAMD","sourcesContent":["import {\n  LOADING,\n  FETCH_SUCCESS,\n  FETCH_FAILURE,\n  SHOW_RESULTS\n} from \"./action_types\";\n\nexport function getApod() {\n  return function(dispatch) {\n    fetch(\"http://localhost:3000/apod\")\n      .then(response => response.json())\n      .then(data => {\n        const receivedObject = {\n          artist: data.copyright,\n          title: data.title,\n          date: data.date,\n          explanation: data.explanation,\n          link: data.url\n        };\n        dispatch(showResults(receivedObject));\n      });\n  };\n}\n\nexport function getMrp() {\n  return function(dispatch) {\n    fetch(\"http://localhost:3000/mrp\")\n      .then(response => response.json())\n      .then(data => {\n        const receivedArray = {\n          info: data.photos\n        };\n        dispatch(showResults(receivedArray));\n      });\n  };\n}\n\nexport function showResults(received) {\n  return function(dispatch) {\n    dispatch({\n      type: SHOW_RESULTS,\n      payload: true,\n      receivedObject: received,\n      receivedArray: received\n    });\n  };\n}\n\nexport function loading() {\n  return function(dispatch) {\n    dispatch({\n      type: LOADING,\n      payload: true\n    });\n  };\n}\n\nexport function fetchSuccess() {\n  return function(dispatch) {\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: true\n    });\n  };\n}\n\nexport function fetchFailure() {\n  return function(dispatch) {\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: true\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}