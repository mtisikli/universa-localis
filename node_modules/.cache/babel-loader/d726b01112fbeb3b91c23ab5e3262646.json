{"ast":null,"code":"import { SUBMITTED, FETCH_SUCCESS, FETCH_FAILURE, SHOW_RESULTS } from \"./action_types\";\nexport function getApod() {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/apod\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var received = {\n        artist: data.copyright,\n        title: data.title,\n        date: data.date,\n        explanation: data.explanation,\n        link: data.url\n      };\n      dispatch(fetchSuccess());\n      dispatch(showResults(received));\n    }).catch(function (error) {\n      dispatch(fetchFailure());\n      console.error(\"Error:\", error);\n    });\n  };\n}\nexport function getMrp() {\n  return function (dispatch) {\n    fetch(\"http://localhost:3000/mrp\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var received = {\n        name: data.photos[0].rover.name,\n        landing_date: data.photos[0].rover.landing_date,\n        camera: data.photos[0].camera.full_name,\n        link: data.photos[0].img_src\n      };\n      dispatch(fetchSuccess());\n      dispatch(showResults(received));\n    });\n  };\n}\nexport function submitted() {\n  return function (dispatch) {\n    dispatch({\n      type: SUBMITTED,\n      payload: true\n    });\n  };\n}\nexport function showResults(received) {\n  return function (dispatch) {\n    dispatch({\n      type: SHOW_RESULTS,\n      payload: true,\n      receivedObject: received\n    });\n  };\n}\nexport function fetchSuccess() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: true\n    });\n  };\n}\nexport function fetchFailure() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: true\n    });\n  };\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/universa_localis/src/actions/formActions/actions.js"],"names":["SUBMITTED","FETCH_SUCCESS","FETCH_FAILURE","SHOW_RESULTS","getApod","dispatch","fetch","then","response","json","data","received","artist","copyright","title","date","explanation","link","url","fetchSuccess","showResults","catch","error","fetchFailure","console","getMrp","name","photos","rover","landing_date","camera","full_name","img_src","submitted","type","payload","receivedObject"],"mappings":"AAAA,SACEA,SADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,YAJF,QAKO,gBALP;AAOA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,UAASC,QAAT,EAAmB;AACxBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,UAAMC,QAAQ,GAAG;AACfC,QAAAA,MAAM,EAAEF,IAAI,CAACG,SADE;AAEfC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFG;AAGfC,QAAAA,IAAI,EAAEL,IAAI,CAACK,IAHI;AAIfC,QAAAA,WAAW,EAAEN,IAAI,CAACM,WAJH;AAKfC,QAAAA,IAAI,EAAEP,IAAI,CAACQ;AALI,OAAjB;AAOAb,MAAAA,QAAQ,CAACc,YAAY,EAAb,CAAR;AACAd,MAAAA,QAAQ,CAACe,WAAW,CAACT,QAAD,CAAZ,CAAR;AACD,KAZH,EAaGU,KAbH,CAaS,UAAAC,KAAK,EAAI;AACdjB,MAAAA,QAAQ,CAACkB,YAAY,EAAb,CAAR;AACAC,MAAAA,OAAO,CAACF,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD,KAhBH;AAiBD,GAlBD;AAmBD;AAED,OAAO,SAASG,MAAT,GAAkB;AACvB,SAAO,UAASpB,QAAT,EAAmB;AACxBC,IAAAA,KAAK,CAAC,2BAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,UAAMC,QAAQ,GAAG;AACfe,QAAAA,IAAI,EAAEhB,IAAI,CAACiB,MAAL,CAAY,CAAZ,EAAeC,KAAf,CAAqBF,IADZ;AAEfG,QAAAA,YAAY,EAAEnB,IAAI,CAACiB,MAAL,CAAY,CAAZ,EAAeC,KAAf,CAAqBC,YAFpB;AAGfC,QAAAA,MAAM,EAAEpB,IAAI,CAACiB,MAAL,CAAY,CAAZ,EAAeG,MAAf,CAAsBC,SAHf;AAIfd,QAAAA,IAAI,EAAEP,IAAI,CAACiB,MAAL,CAAY,CAAZ,EAAeK;AAJN,OAAjB;AAMA3B,MAAAA,QAAQ,CAACc,YAAY,EAAb,CAAR;AACAd,MAAAA,QAAQ,CAACe,WAAW,CAACT,QAAD,CAAZ,CAAR;AACD,KAXH;AAYD,GAbD;AAcD;AAED,OAAO,SAASsB,SAAT,GAAqB;AAC1B,SAAO,UAAS5B,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AACP6B,MAAAA,IAAI,EAAElC,SADC;AAEPmC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;AAMD;AAED,OAAO,SAASf,WAAT,CAAqBT,QAArB,EAA+B;AACpC,SAAO,UAASN,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AACP6B,MAAAA,IAAI,EAAE/B,YADC;AAEPgC,MAAAA,OAAO,EAAE,IAFF;AAGPC,MAAAA,cAAc,EAAEzB;AAHT,KAAD,CAAR;AAKD,GAND;AAOD;AAED,OAAO,SAASQ,YAAT,GAAwB;AAC7B,SAAO,UAASd,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AACP6B,MAAAA,IAAI,EAAEjC,aADC;AAEPkC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;AAMD;AAED,OAAO,SAASZ,YAAT,GAAwB;AAC7B,SAAO,UAASlB,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AACP6B,MAAAA,IAAI,EAAEhC,aADC;AAEPiC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;AAMD","sourcesContent":["import {\n  SUBMITTED,\n  FETCH_SUCCESS,\n  FETCH_FAILURE,\n  SHOW_RESULTS\n} from \"./action_types\";\n\nexport function getApod() {\n  return function(dispatch) {\n    fetch(\"http://localhost:3000/apod\")\n      .then(response => response.json())\n      .then(data => {\n        const received = {\n          artist: data.copyright,\n          title: data.title,\n          date: data.date,\n          explanation: data.explanation,\n          link: data.url\n        };\n        dispatch(fetchSuccess());\n        dispatch(showResults(received));\n      })\n      .catch(error => {\n        dispatch(fetchFailure());\n        console.error(\"Error:\", error);\n      });\n  };\n}\n\nexport function getMrp() {\n  return function(dispatch) {\n    fetch(\"http://localhost:3000/mrp\")\n      .then(response => response.json())\n      .then(data => {\n        const received = {\n          name: data.photos[0].rover.name,\n          landing_date: data.photos[0].rover.landing_date,\n          camera: data.photos[0].camera.full_name,\n          link: data.photos[0].img_src\n        };\n        dispatch(fetchSuccess());\n        dispatch(showResults(received));\n      });\n  };\n}\n\nexport function submitted() {\n  return function(dispatch) {\n    dispatch({\n      type: SUBMITTED,\n      payload: true\n    });\n  };\n}\n\nexport function showResults(received) {\n  return function(dispatch) {\n    dispatch({\n      type: SHOW_RESULTS,\n      payload: true,\n      receivedObject: received\n    });\n  };\n}\n\nexport function fetchSuccess() {\n  return function(dispatch) {\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: true\n    });\n  };\n}\n\nexport function fetchFailure() {\n  return function(dispatch) {\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: true\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}