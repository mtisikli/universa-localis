{"ast":null,"code":"import { ARTIST_UPDATE, MOVEMENT_UPDATE, CENTURY_UPDATE, BRANCH_UPDATE, LOADING, FETCH_SUCCESS, FETCH_FAILURE, RESET } from \"./action_types\";\nexport function onOpen() {\n  return function (dispatch) {\n    dispatch({\n      type: SEL_OPEN,\n      payload: true\n    });\n  };\n}\nexport function onClose() {\n  return function (dispatch) {\n    dispatch({\n      type: SEL_CLO,\n      payload: false\n    });\n  };\n}\nexport function artistUpdate(artist) {\n  return function (dispatch) {\n    dispatch({\n      type: ARTIST_UPDATE,\n      payload: artist\n    });\n  };\n}\nexport function movementUpdate(movement) {\n  return function (dispatch) {\n    dispatch({\n      type: MOVEMENT_UPDATE,\n      payload: movement\n    });\n  };\n}\nexport function centuryUpdate(century) {\n  return function (dispatch) {\n    dispatch({\n      type: CENTURY_UPDATE,\n      payload: century\n    });\n  };\n}\nexport function branchUpdate(branch) {\n  return function (dispatch) {\n    dispatch({\n      type: BRANCH_UPDATE,\n      payload: branch\n    });\n  };\n}\nexport function fetchStart() {\n  return function (dispatch, getState) {\n    var data = {\n      artist: getState().form.artist,\n      movement: getState().form.movement,\n      century: getState().form.century,\n      branch: getState().form.branch\n    };\n    dispatch(loading());\n    fetch(\"http://localhost:3000/categories\", {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      if (res.ok) {\n        dispatch(fetchSuccess());\n        console.log(res.body);\n      } else {\n        dispatch(fetchFailure());\n        console.log(\"Failure!\");\n      }\n    }).catch(function (error) {\n      dispatch(fetchFailure());\n      console.error(\"Error:\", error);\n    });\n  };\n}\nexport function loading() {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING,\n      payload: true\n    });\n  };\n}\nexport function fetchSuccess() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: true\n    });\n  };\n}\nexport function fetchFailure() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: true\n    });\n  };\n}\nexport function reset() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET,\n      payload: \"\"\n    });\n  };\n}","map":{"version":3,"sources":["/Users/alicanakyuz/Desktop/Works/tansu-first-project/client/src/Actions/formActions/actions.js"],"names":["ARTIST_UPDATE","MOVEMENT_UPDATE","CENTURY_UPDATE","BRANCH_UPDATE","LOADING","FETCH_SUCCESS","FETCH_FAILURE","RESET","onOpen","dispatch","type","SEL_OPEN","payload","onClose","SEL_CLO","artistUpdate","artist","movementUpdate","movement","centuryUpdate","century","branchUpdate","branch","fetchStart","getState","data","form","loading","fetch","method","body","JSON","stringify","headers","then","res","ok","fetchSuccess","console","log","fetchFailure","catch","error","reset"],"mappings":"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","sourcesContent":["import {\n  ARTIST_UPDATE,\n  MOVEMENT_UPDATE,\n  CENTURY_UPDATE,\n  BRANCH_UPDATE,\n  LOADING,\n  FETCH_SUCCESS,\n  FETCH_FAILURE,\n  RESET\n} from \"./action_types\";\n\nexport function onOpen() {\n  return function(dispatch) {\n    dispatch({\n      type: SEL_OPEN,\n      payload: true\n    });\n  };\n}\nexport function onClose() {\n  return function(dispatch) {\n    dispatch({\n      type: SEL_CLO,\n      payload: false\n    });\n  };\n}\n\n\nexport function artistUpdate(artist) {\n  return function(dispatch) {\n    dispatch({\n      type: ARTIST_UPDATE,\n      payload: artist\n    });\n  };\n}\n\nexport function movementUpdate(movement) {\n  return function(dispatch) {\n    dispatch({\n      type: MOVEMENT_UPDATE,\n      payload: movement\n    });\n  };\n}\n\nexport function centuryUpdate(century) {\n  return function(dispatch) {\n    dispatch({\n      type: CENTURY_UPDATE,\n      payload: century\n    });\n  };\n}\n\nexport function branchUpdate(branch) {\n  return function(dispatch) {\n    dispatch({\n      type: BRANCH_UPDATE,\n      payload: branch\n    });\n  };\n}\n\nexport function fetchStart() {\n  return function(dispatch, getState) {\n    const data = {\n      artist: getState().form.artist,\n      movement: getState().form.movement,\n      century: getState().form.century,\n      branch: getState().form.branch\n    };\n    dispatch(loading());\n    fetch(\"http://localhost:3000/categories\", {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          dispatch(fetchSuccess());\n          console.log(res.body);\n        } else {\n          dispatch(fetchFailure());\n          console.log(\"Failure!\");\n        }\n      })\n      .catch(error => {\n        dispatch(fetchFailure());\n        console.error(\"Error:\", error);\n      });\n  };\n}\n\nexport function loading() {\n  return function(dispatch) {\n    dispatch({\n      type: LOADING,\n      payload: true\n    });\n  };\n}\n\nexport function fetchSuccess() {\n  return function(dispatch) {\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: true\n    });\n  };\n}\n\nexport function fetchFailure() {\n  return function(dispatch) {\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: true\n    });\n  };\n}\n\nexport function reset() {\n  return function(dispatch) {\n    dispatch({\n      type: RESET,\n      payload: \"\"\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}