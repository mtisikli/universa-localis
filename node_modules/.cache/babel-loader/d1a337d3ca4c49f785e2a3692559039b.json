{"ast":null,"code":"import _classCallCheck from \"/Users/alicanakyuz/Desktop/Works/tansu-first-project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alicanakyuz/Desktop/Works/tansu-first-project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alicanakyuz/Desktop/Works/tansu-first-project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alicanakyuz/Desktop/Works/tansu-first-project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alicanakyuz/Desktop/Works/tansu-first-project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/alicanakyuz/Desktop/Works/tansu-first-project/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/alicanakyuz/Desktop/Works/tansu-first-project/client/src/components/TextFields/selectForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      display: 'block',\n      marginTop: theme.spacing.unit * 2\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    }\n  };\n};\n\nvar SelectForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectForm, _React$Component);\n\n  function SelectForm(props) {\n    var _this;\n\n    _classCallCheck(this, SelectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectForm).call(this, props));\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SelectForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var value = event.target.value;\n\n      if (event.target.name === 'Alican') {\n        this.props.dispatch(onNameUpdated(value));\n      }\n\n      ;\n\n      if (event.target.name === 'Tansu') {\n        this.props.dispatch(onEmailUpdated(value));\n      }\n\n      ;\n\n      if (event.target.name === 'Tolga') {\n        this.props.dispatch(onTopicUpdated(value));\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"form\", {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Open the select\"), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"demo-controlled-open-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Artist\"), React.createElement(Select, {\n        value: this.props.artist,\n        open: this.props.open,\n        onChange: this.handleChange,\n        onClose: this.handleClose,\n        onOpen: this.handleOpen,\n        inputProps: {\n          name: 'age',\n          id: 'demo-controlled-open-select'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"None\")), React.createElement(MenuItem, {\n        value: \"Alican\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Alican\"), React.createElement(MenuItem, {\n        value: \"Tansu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Tansu\"), React.createElement(MenuItem, {\n        value: \"Tolga\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Tolga\"))));\n    }\n  }]);\n\n  return SelectForm;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    artist: state.form.artist,\n    movement: state.form.movement,\n    century: state.form.century,\n    branch: state.form.branch,\n    open: state.form.open\n  };\n};\n\nSelectForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar withstyles = withStyles(styles)(SelectForm);\nvar selectFormConnected = connect(mapStateToProps)(withstyles);\nexport default selectFormConnected;","map":{"version":3,"sources":["/Users/alicanakyuz/Desktop/Works/tansu-first-project/client/src/components/TextFields/selectForm.js"],"names":["React","PropTypes","withStyles","connect","InputLabel","MenuItem","FormControl","Select","Button","styles","theme","button","display","marginTop","spacing","unit","formControl","margin","minWidth","SelectForm","props","handleClose","setState","open","handleOpen","handleChange","bind","event","value","target","name","dispatch","onNameUpdated","onEmailUpdated","onTopicUpdated","classes","artist","id","Component","mapStateToProps","state","form","movement","century","branch","propTypes","object","isRequired","withstyles","selectFormConnected"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing.unit * 2,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n});\n\nclass SelectForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  };\n\n  handleChange (event) {\n    let value = event.target.value;\n    if (event.target.name === 'Alican') {\n      this.props.dispatch(onNameUpdated(value));\n    };\n    if (event.target.name === 'Tansu') {\n      this.props.dispatch(onEmailUpdated(value));\n    };\n    if (event.target.name === 'Tolga') {\n      this.props.dispatch(onTopicUpdated(value));\n    };\n  };\n\n\n\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form autoComplete=\"off\">\n\n        <Button className={classes.button} onClick={this.handleOpen}>\n          Open the select\n        </Button>\n\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"demo-controlled-open-select\">Artist</InputLabel>\n          <Select\n            value={this.props.artist}\n            open={this.props.open}\n\n            onChange={this.handleChange}\n\n            onClose={this.handleClose}\n            onOpen={this.handleOpen}\n\n\n            inputProps={{\n              name: 'age',\n              id: 'demo-controlled-open-select',\n            }}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value='Alican'>Alican</MenuItem>\n            <MenuItem value='Tansu'>Tansu</MenuItem>\n            <MenuItem value='Tolga'>Tolga</MenuItem>\n          </Select>\n        </FormControl>\n      </form>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    artist: state.form.artist,\n    movement: state.form.movement,\n    century: state.form.century,\n    branch: state.form.branch,\n    open: state.form.open\n  };\n};\n\nSelectForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst withstyles = withStyles(styles)(SelectForm);\nconst selectFormConnected = connect(mapStateToProps)(withstyles);\nexport default selectFormConnected;\n"]},"metadata":{},"sourceType":"module"}