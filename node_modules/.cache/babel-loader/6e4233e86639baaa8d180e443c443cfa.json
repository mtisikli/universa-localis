{"ast":null,"code":"import _classCallCheck from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/universa_localis/src/container/contact.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { nameUpdate, emailUpdate, messageUpdate, validateForm } from \"../actions/contactActions/actions\";\nimport { Animated } from \"react-animated-css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      backgroundColor: \"rgba(200, 200, 200, .5)\",\n      marginLeft: 400,\n      marginRight: 400,\n      borderRadius: \"10%\"\n    },\n    home: {\n      color: \"#d8dcf2\",\n      fontSize: \"2rem\",\n      fontFamily: \"Lobster, cursive\",\n      textDecoration: \"underline\",\n      textDecorationColor: \"#923600\"\n    },\n    contact: {\n      position: \"relative\",\n      bottom: 60\n    },\n    header: {\n      fontFamily: \"Righteous\",\n      color: \"#d8dcf2\",\n      height: 80,\n      fontSize: 100,\n      marginTop: 50\n    },\n    helper: {\n      color: \"#d8dcf2\",\n      fontSize: \"1.5rem\",\n      fontFamily: \"Quicksand\",\n      position: \"relative\",\n      bottom: 40\n    },\n    form: {\n      width: 300,\n      marginBottom: 20\n    },\n    button: {\n      marginTop: 20\n    }\n  };\n};\n\nvar Contact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contact, _Component);\n\n  function Contact(props) {\n    var _this;\n\n    _classCallCheck(this, Contact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Contact).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Contact, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var value = event.target.value;\n\n      if (event.target.name === \"name\") {\n        this.props.dispatch(nameUpdate(value));\n      }\n\n      if (event.target.name === \"email\") {\n        this.props.dispatch(emailUpdate(value));\n      }\n\n      if (event.target.name === \"message\") {\n        this.props.dispatch(messageUpdate(value));\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      this.props.dispatch(validateForm());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var showNameError;\n      var showEmailError;\n      var showMessageError;\n\n      if (this.props.errorFound) {\n        this.props.errorArray.forEach(function (error) {\n          if (error === 1) {\n            showNameError = \"Name field can't be empty!\";\n          } else if (error === 2) {\n            showEmailError = \"Email address is not valid!\";\n          } else if (error === 3) {\n            showEmailError = \"Email field can't be empty! \";\n          } else if (error === 4) {\n            showMessageError = \"Message field can't be empty!\";\n          }\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Animated, {\n        animationIn: \"fadeInRight\",\n        animationOut: \"fadeOut\",\n        isVisible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.home,\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Universa Localis\"))), React.createElement(\"div\", {\n        className: classes.contact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: classes.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Contact\"), React.createElement(\"p\", {\n        className: classes.helper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"We'd like to hear from you!\"), React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        required: true,\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        name: \"name\",\n        label: \"Name\",\n        value: this.props.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, showNameError)), React.createElement(FormControl, {\n        required: true,\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        className: classes.field,\n        name: \"email\",\n        label: \"Email\",\n        value: this.props.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, showEmailError)), React.createElement(FormControl, {\n        required: true,\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        name: \"message\",\n        label: \"Message\",\n        multiline: \"true\",\n        rows: 5,\n        value: this.props.message,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        error: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, showMessageError))), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        type: \"submit\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Contact;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  state = state.ContactReducer;\n  return {\n    name: state.form.name,\n    email: state.form.email,\n    message: state.form.message,\n    errorArray: state.errorArray\n  };\n};\n\nContact.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar withstyles = withStyles(styles)(Contact);\nvar contactConnected = connect(mapStateToProps)(withstyles);\nexport default contactConnected;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/universa_localis/src/container/contact.js"],"names":["React","Component","connect","PropTypes","Toolbar","nameUpdate","emailUpdate","messageUpdate","validateForm","Animated","withStyles","FormControl","FormHelperText","TextField","Button","styles","theme","root","display","flexDirection","alignItems","backgroundColor","marginLeft","marginRight","borderRadius","home","color","fontSize","fontFamily","textDecoration","textDecorationColor","contact","position","bottom","header","height","marginTop","helper","form","width","marginBottom","button","Contact","props","handleChange","bind","handleSubmit","event","value","target","name","dispatch","classes","showNameError","showEmailError","showMessageError","errorFound","errorArray","forEach","error","field","email","message","mapStateToProps","state","ContactReducer","propTypes","object","isRequired","withstyles","contactConnected"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {\n  nameUpdate,\n  emailUpdate,\n  messageUpdate,\n  validateForm\n} from \"../actions/contactActions/actions\";\nimport { Animated } from \"react-animated-css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(200, 200, 200, .5)\",\n    marginLeft: 400,\n    marginRight: 400,\n    borderRadius: \"10%\"\n  },\n  home: {\n    color: \"#d8dcf2\",\n    fontSize: \"2rem\",\n    fontFamily: \"Lobster, cursive\",\n    textDecoration: \"underline\",\n    textDecorationColor: \"#923600\"\n  },\n  contact: {\n    position: \"relative\",\n    bottom: 60\n  },\n  header: {\n    fontFamily: \"Righteous\",\n    color: \"#d8dcf2\",\n    height: 80,\n    fontSize: 100,\n    marginTop: 50\n  },\n  helper: {\n    color: \"#d8dcf2\",\n    fontSize: \"1.5rem\",\n    fontFamily: \"Quicksand\",\n    position: \"relative\",\n    bottom: 40\n  },\n  form: {\n    width: 300,\n    marginBottom: 20\n  },\n  button: {\n    marginTop: 20\n  }\n});\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let value = event.target.value;\n    if (event.target.name === \"name\") {\n      this.props.dispatch(nameUpdate(value));\n    }\n    if (event.target.name === \"email\") {\n      this.props.dispatch(emailUpdate(value));\n    }\n    if (event.target.name === \"message\") {\n      this.props.dispatch(messageUpdate(value));\n    }\n  }\n\n  handleSubmit() {\n    this.props.dispatch(validateForm());\n  }\n\n  render() {\n    const { classes } = this.props;\n    let showNameError;\n    let showEmailError;\n    let showMessageError;\n\n    if (this.props.errorFound) {\n      this.props.errorArray.forEach(error => {\n        if (error === 1) {\n          showNameError = \"Name field can't be empty!\";\n        } else if (error === 2) {\n          showEmailError = \"Email address is not valid!\";\n        } else if (error === 3) {\n          showEmailError = \"Email field can't be empty! \";\n        } else if (error === 4) {\n          showMessageError = \"Message field can't be empty!\";\n        }\n      });\n    }\n\n    return (\n      <React.Fragment>\n        <Toolbar>\n          <Animated\n            animationIn=\"fadeInRight\"\n            animationOut=\"fadeOut\"\n            isVisible={true}\n          >\n            <Button className={classes.home} href=\"/\">\n              Universa Localis\n            </Button>\n          </Animated>\n        </Toolbar>\n        <div className={classes.contact}>\n          <h1 className={classes.header}>Contact</h1>\n          <p className={classes.helper}>We'd like to hear from you!</p>\n          <div className={classes.root}>\n            <FormControl required className={classes.form}>\n              <TextField\n                required\n                name=\"name\"\n                label=\"Name\"\n                value={this.props.name}\n                onChange={this.handleChange}\n              />\n              <FormHelperText error>{showNameError}</FormHelperText>\n            </FormControl>\n            <FormControl required className={classes.form}>\n              <TextField\n                required\n                className={classes.field}\n                name=\"email\"\n                label=\"Email\"\n                value={this.props.email}\n                onChange={this.handleChange}\n              />\n              <FormHelperText error>{showEmailError}</FormHelperText>\n            </FormControl>\n            <FormControl required className={classes.form}>\n              <TextField\n                required\n                name=\"message\"\n                label=\"Message\"\n                multiline=\"true\"\n                rows={5}\n                value={this.props.message}\n                onChange={this.handleChange}\n              />\n              <FormHelperText error>{showMessageError}</FormHelperText>\n            </FormControl>\n          </div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            type=\"submit\"\n            onClick={this.handleSubmit}\n          >\n            Submit\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  state = state.ContactReducer;\n  return {\n    name: state.form.name,\n    email: state.form.email,\n    message: state.form.message,\n    errorArray: state.errorArray\n  };\n};\n\nContact.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst withstyles = withStyles(styles)(Contact);\nconst contactConnected = connect(mapStateToProps)(withstyles);\nexport default contactConnected;\n"]},"metadata":{},"sourceType":"module"}