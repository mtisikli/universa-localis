{"ast":null,"code":"import { SUBMITTED, FETCH_SUCCESS, FETCH_FAILURE, SELECT_OPEN, SELECT_CLOSE, MRP_NAME_UPDATE, MRP_DATE_UPDATE, IVL_KEY_UPDATE, IVL_YEAR_UPDATE, STAR_NAME_UPDATE, FINAL_QUERY, SHOW_RESULT, SHOW_APOD } from \"./action_types\"; //  APOD  ////////////////////////////////////////////////////\n\nexport function getApod() {\n  return function (dispatch) {\n    fetch(\"https://api.nasa.gov/planetary/apod?api_key=1bLpXwhcARlJOhP0k9rQ0PBxWtO7JJRflDIeg16p\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var received = {\n        artist: data.copyright,\n        title: data.title,\n        date: data.date,\n        explanation: data.explanation,\n        link: data.url,\n        media_type: data.media_type\n      };\n      dispatch(fetchSuccess());\n      dispatch(showApod(received));\n    }).catch(function (error) {\n      dispatch(fetchFailure());\n      console.error(\"Error:\", error);\n    });\n  };\n}\nexport function showApod(received) {\n  return function (dispatch) {\n    var newUrl = \"http://localhost:3000/apod\";\n    dispatch({\n      type: SHOW_APOD,\n      payload: true,\n      receivedInfo: received,\n      url: newUrl\n    });\n  };\n} //  MRP  ////////////////////////////////////////////////////\n\nexport function onOpen() {\n  return function (dispatch) {\n    dispatch({\n      type: SELECT_OPEN,\n      payload: true\n    });\n  };\n}\nexport function onClose() {\n  return function (dispatch) {\n    dispatch({\n      type: SELECT_CLOSE,\n      payload: false\n    });\n  };\n}\nexport function mrpNameUpdate(name) {\n  return function (dispatch) {\n    dispatch({\n      type: MRP_NAME_UPDATE,\n      payload: name\n    });\n  };\n}\nexport function mrpDateUpdate(date) {\n  return function (dispatch) {\n    dispatch({\n      type: MRP_DATE_UPDATE,\n      payload: date\n    });\n  };\n}\nexport function getMrp() {\n  return function (dispatch, getState) {\n    var state = getState().FormReducer.mrpForm;\n    var sent = {\n      name: state.name,\n      date: state.date\n    };\n    var endpoint = \"https://api.nasa.gov/mars-photos/api/v1/rovers/\".concat(sent.name, \"/photos?earth_date=\").concat(sent.date, \"&api_key=1bLpXwhcARlJOhP0k9rQ0PBxWtO7JJRflDIeg16p\");\n    fetch(endpoint).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var received = {\n        name: data.photos.map(function (e) {\n          return e.rover.name;\n        }),\n        earth_date: data.photos.map(function (e) {\n          return e.earth_date;\n        }),\n        photos: data.photos\n      };\n      console.log(received);\n      dispatch(fetchSuccess());\n      dispatch(showResult(received));\n    }).catch(function (error) {\n      dispatch(fetchFailure());\n      console.error(\"Error:\", error);\n    });\n  };\n} //  IVL  ////////////////////////////////////////////////////\n\nexport function ivlKeyUpdate(keyword) {\n  return function (dispatch) {\n    dispatch({\n      type: IVL_KEY_UPDATE,\n      payload: keyword\n    });\n  };\n}\nexport function ivlYearUpdate(year) {\n  return function (dispatch) {\n    dispatch({\n      type: IVL_YEAR_UPDATE,\n      payload: year\n    });\n  };\n}\nexport function getIvl() {\n  return function (dispatch, getState) {\n    var state = getState().FormReducer.ivlForm;\n    var sent = {\n      keyword: state.keyword,\n      year: state.year\n    };\n    var endpoint = \"https://images-api.nasa.gov/search?q=\".concat(sent.keyword, \"%\").concat(sent.year);\n    fetch(endpoint).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var received = {\n        info: data.collection.items.map(function (i) {\n          return i;\n        })\n      };\n      console.log(received);\n      dispatch(fetchSuccess());\n      dispatch(showResult(received));\n    }).catch(function (error) {\n      dispatch(fetchFailure());\n      console.error(\"Error:\", error);\n    });\n  };\n} //  TECHPORT  ////////////////////////////////////////////////////\n\nexport function getTechport() {\n  return function (dispatch) {\n    fetch(\"https://api.nasa.gov/techport/api/projects?api_key=1bLpXwhcARlJOhP0k9rQ0PBxWtO7JJRflDIeg16p\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var receivedIds = {\n        id: data.projects.projects.map(function (i) {\n          return i.id;\n        })\n      };\n      console.log(receivedIds);\n      dispatch(techportFetch(receivedIds));\n    }).catch(function (error) {\n      console.error(\"Error:\", error);\n    });\n  };\n}\nexport function techportFetch(receivedIds) {\n  return function (dispatch) {\n    var idParams = receivedIds.id[Math.floor(Math.random() * receivedIds.id.length)];\n    fetch(\"https://api.nasa.gov/techport/api/projects/\".concat(idParams, \"?api_key=1bLpXwhcARlJOhP0k9rQ0PBxWtO7JJRflDIeg16p\")).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var received = {\n        title: data.project.title,\n        workLocation: data.project.workLocations.workLocation,\n        endDate: data.project.endDate,\n        img_src: data.project.library.libraryItem[1].files.file.url,\n        description: data.project.description,\n        benefits: data.project.benefits\n      };\n      console.log(received);\n      dispatch(showResult(received));\n    }).catch(function (error) {\n      console.error(\"Error:\", error);\n    });\n  };\n} //  SPACEX  ////////////////////////////////////////////////////\n\nexport function getSpacex() {\n  return function (dispatch) {\n    var flightNumber = Math.floor(Math.random() * 73 + 1);\n    console.log(flightNumber);\n    fetch(\"https://api.spacexdata.com/v3/launches/\".concat(flightNumber)).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var received = {\n        flight_number: data.flight_number,\n        mission_name: data.mission_name,\n        launch_year: data.launch_year,\n        rocket_name: data.rocket.rocket_name,\n        mission_patch: data.links.mission_patch,\n        article_link: data.links.article_link,\n        video_link: data.links.video_link,\n        wikipedia: data.links.wikipedia,\n        details: data.details\n      };\n      console.log(received);\n      dispatch(showResult(received));\n    }).catch(function (error) {\n      console.error(\"Error:\", error);\n    });\n  };\n} //  STARMAP  ////////////////////////////////////////////////////\n\nexport function starNameUpdate(starName) {\n  return function (dispatch) {\n    dispatch({\n      type: STAR_NAME_UPDATE,\n      payload: starName\n    });\n  };\n}\nexport function getFinalQuery() {\n  return function (dispatch, getState) {\n    var state = getState().FormReducer.starForm;\n    var star = \"?object=\" + state.starName;\n    var finalUrl = \"http://server7.sky-map.org/skywindow\".concat(star, \"&ra=5.59&de=-5.45&zoom=6&show_grid=1&show_constellation_lines=1&show_constellation_boundaries=1&show_const_names=0&show_galaxies=1&img_source=DSS2\");\n    dispatch(updateUrl(finalUrl));\n  };\n}\nexport function updateUrl(finalUrl) {\n  return function (dispatch) {\n    dispatch({\n      type: FINAL_QUERY,\n      payload: true,\n      finalUrl: finalUrl\n    });\n    console.log(finalUrl);\n  };\n} /////////////////////////////////////////////////////////////////\n\nexport function showResult(received) {\n  return function (dispatch) {\n    dispatch({\n      type: SHOW_RESULT,\n      payload: true,\n      receivedInfo: received\n    });\n  };\n}\nexport function submitted() {\n  return function (dispatch) {\n    dispatch({\n      type: SUBMITTED,\n      payload: true\n    });\n  };\n}\nexport function fetchSuccess() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: true\n    });\n  };\n}\nexport function fetchFailure() {\n  return function (dispatch) {\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: true\n    });\n  };\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/universa_localis/src/actions/formActions/actions.js"],"names":["SUBMITTED","FETCH_SUCCESS","FETCH_FAILURE","SELECT_OPEN","SELECT_CLOSE","MRP_NAME_UPDATE","MRP_DATE_UPDATE","IVL_KEY_UPDATE","IVL_YEAR_UPDATE","STAR_NAME_UPDATE","FINAL_QUERY","SHOW_RESULT","SHOW_APOD","getApod","dispatch","fetch","then","response","json","data","received","artist","copyright","title","date","explanation","link","url","media_type","fetchSuccess","showApod","catch","error","fetchFailure","console","newUrl","type","payload","receivedInfo","onOpen","onClose","mrpNameUpdate","name","mrpDateUpdate","getMrp","getState","state","FormReducer","mrpForm","sent","endpoint","photos","map","e","rover","earth_date","log","showResult","ivlKeyUpdate","keyword","ivlYearUpdate","year","getIvl","ivlForm","info","collection","items","i","getTechport","receivedIds","id","projects","techportFetch","idParams","Math","floor","random","length","project","workLocation","workLocations","endDate","img_src","library","libraryItem","files","file","description","benefits","getSpacex","flightNumber","flight_number","mission_name","launch_year","rocket_name","rocket","mission_patch","links","article_link","video_link","wikipedia","details","starNameUpdate","starName","getFinalQuery","starForm","star","finalUrl","updateUrl","submitted"],"mappings":"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","sourcesContent":["import {\n  SUBMITTED,\n  FETCH_SUCCESS,\n  FETCH_FAILURE,\n  SELECT_OPEN,\n  SELECT_CLOSE,\n  MRP_NAME_UPDATE,\n  MRP_DATE_UPDATE,\n  IVL_KEY_UPDATE,\n  IVL_YEAR_UPDATE,\n  STAR_NAME_UPDATE,\n  FINAL_QUERY,\n  SHOW_RESULT,\n  SHOW_APOD\n} from \"./action_types\";\n\n//  APOD  ////////////////////////////////////////////////////\n\nexport function getApod() {\n  return function(dispatch) {\n    fetch(\n      \"https://api.nasa.gov/planetary/apod?api_key=1bLpXwhcARlJOhP0k9rQ0PBxWtO7JJRflDIeg16p\"\n    )\n      .then(response => response.json())\n      .then(data => {\n        const received = {\n          artist: data.copyright,\n          title: data.title,\n          date: data.date,\n          explanation: data.explanation,\n          link: data.url,\n          media_type: data.media_type\n        };\n        dispatch(fetchSuccess());\n        dispatch(showApod(received));\n      })\n      .catch(error => {\n        dispatch(fetchFailure());\n        console.error(\"Error:\", error);\n      });\n  };\n}\n\nexport function showApod(received) {\n  return function(dispatch) {\n    const newUrl = \"http://localhost:3000/apod\";\n    dispatch({\n      type: SHOW_APOD,\n      payload: true,\n      receivedInfo: received,\n      url: newUrl\n    });\n  };\n}\n\n//  MRP  ////////////////////////////////////////////////////\n\nexport function onOpen() {\n  return function(dispatch) {\n    dispatch({\n      type: SELECT_OPEN,\n      payload: true\n    });\n  };\n}\nexport function onClose() {\n  return function(dispatch) {\n    dispatch({\n      type: SELECT_CLOSE,\n      payload: false\n    });\n  };\n}\n\nexport function mrpNameUpdate(name) {\n  return function(dispatch) {\n    dispatch({\n      type: MRP_NAME_UPDATE,\n      payload: name\n    });\n  };\n}\n\nexport function mrpDateUpdate(date) {\n  return function(dispatch) {\n    dispatch({\n      type: MRP_DATE_UPDATE,\n      payload: date\n    });\n  };\n}\n\nexport function getMrp() {\n  return function(dispatch, getState) {\n    const state = getState().FormReducer.mrpForm;\n    const sent = {\n      name: state.name,\n      date: state.date\n    };\n    const endpoint = `https://api.nasa.gov/mars-photos/api/v1/rovers/${\n      sent.name\n    }/photos?earth_date=${\n      sent.date\n    }&api_key=1bLpXwhcARlJOhP0k9rQ0PBxWtO7JJRflDIeg16p`;\n\n    fetch(endpoint)\n      .then(response => response.json())\n      .then(data => {\n        const received = {\n          name: data.photos.map(e => e.rover.name),\n          earth_date: data.photos.map(e => e.earth_date),\n          photos: data.photos\n        };\n        console.log(received);\n        dispatch(fetchSuccess());\n        dispatch(showResult(received));\n      })\n      .catch(error => {\n        dispatch(fetchFailure());\n        console.error(\"Error:\", error);\n      });\n  };\n}\n\n//  IVL  ////////////////////////////////////////////////////\n\nexport function ivlKeyUpdate(keyword) {\n  return function(dispatch) {\n    dispatch({\n      type: IVL_KEY_UPDATE,\n      payload: keyword\n    });\n  };\n}\n\nexport function ivlYearUpdate(year) {\n  return function(dispatch) {\n    dispatch({\n      type: IVL_YEAR_UPDATE,\n      payload: year\n    });\n  };\n}\n\nexport function getIvl() {\n  return function(dispatch, getState) {\n    const state = getState().FormReducer.ivlForm;\n    const sent = {\n      keyword: state.keyword,\n      year: state.year\n    };\n    const endpoint = `https://images-api.nasa.gov/search?q=${sent.keyword}%${\n      sent.year\n    }`;\n\n    fetch(endpoint)\n      .then(response => response.json())\n      .then(data => {\n        const received = {\n          info: data.collection.items.map(i => i)\n        };\n        console.log(received);\n        dispatch(fetchSuccess());\n        dispatch(showResult(received));\n      })\n      .catch(error => {\n        dispatch(fetchFailure());\n        console.error(\"Error:\", error);\n      });\n  };\n}\n\n//  TECHPORT  ////////////////////////////////////////////////////\n\nexport function getTechport() {\n  return function(dispatch) {\n    fetch(\n      \"https://api.nasa.gov/techport/api/projects?api_key=1bLpXwhcARlJOhP0k9rQ0PBxWtO7JJRflDIeg16p\"\n    )\n      .then(response => response.json())\n      .then(data => {\n        const receivedIds = {\n          id: data.projects.projects.map(i => i.id)\n        };\n        console.log(receivedIds);\n        dispatch(techportFetch(receivedIds));\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  };\n}\n\nexport function techportFetch(receivedIds) {\n  return function(dispatch) {\n    const idParams =\n      receivedIds.id[Math.floor(Math.random() * receivedIds.id.length)];\n    fetch(\n      `https://api.nasa.gov/techport/api/projects/${idParams}?api_key=1bLpXwhcARlJOhP0k9rQ0PBxWtO7JJRflDIeg16p`\n    )\n      .then(response => response.json())\n      .then(data => {\n        const received = {\n          title: data.project.title,\n          workLocation: data.project.workLocations.workLocation,\n          endDate: data.project.endDate,\n          img_src: data.project.library.libraryItem[1].files.file.url,\n          description: data.project.description,\n          benefits: data.project.benefits\n        };\n        console.log(received);\n        dispatch(showResult(received));\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  };\n}\n\n//  SPACEX  ////////////////////////////////////////////////////\n\nexport function getSpacex() {\n  return function(dispatch) {\n    const flightNumber = Math.floor(Math.random() * 73 + 1);\n    console.log(flightNumber);\n    fetch(`https://api.spacexdata.com/v3/launches/${flightNumber}`)\n      .then(response => response.json())\n      .then(data => {\n        const received = {\n          flight_number: data.flight_number,\n          mission_name: data.mission_name,\n          launch_year: data.launch_year,\n          rocket_name: data.rocket.rocket_name,\n          mission_patch: data.links.mission_patch,\n          article_link: data.links.article_link,\n          video_link: data.links.video_link,\n          wikipedia: data.links.wikipedia,\n          details: data.details\n        };\n        console.log(received);\n        dispatch(showResult(received));\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  };\n}\n\n//  STARMAP  ////////////////////////////////////////////////////\n\nexport function starNameUpdate(starName) {\n  return function(dispatch) {\n    dispatch({\n      type: STAR_NAME_UPDATE,\n      payload: starName\n    });\n  };\n}\n\nexport function getFinalQuery() {\n  return function(dispatch, getState) {\n    const state = getState().FormReducer.starForm;\n    const star = \"?object=\" + state.starName;\n\n    const finalUrl = `http://server7.sky-map.org/skywindow${star}&ra=5.59&de=-5.45&zoom=6&show_grid=1&show_constellation_lines=1&show_constellation_boundaries=1&show_const_names=0&show_galaxies=1&img_source=DSS2`;\n    dispatch(updateUrl(finalUrl));\n  };\n}\n\nexport function updateUrl(finalUrl) {\n  return function(dispatch) {\n    dispatch({\n      type: FINAL_QUERY,\n      payload: true,\n      finalUrl: finalUrl\n    });\n    console.log(finalUrl);\n  };\n}\n\n/////////////////////////////////////////////////////////////////\n\nexport function showResult(received) {\n  return function(dispatch) {\n    dispatch({\n      type: SHOW_RESULT,\n      payload: true,\n      receivedInfo: received\n    });\n  };\n}\n\nexport function submitted() {\n  return function(dispatch) {\n    dispatch({\n      type: SUBMITTED,\n      payload: true\n    });\n  };\n}\n\nexport function fetchSuccess() {\n  return function(dispatch) {\n    dispatch({\n      type: FETCH_SUCCESS,\n      payload: true\n    });\n  };\n}\n\nexport function fetchFailure() {\n  return function(dispatch) {\n    dispatch({\n      type: FETCH_FAILURE,\n      payload: true\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}