{"ast":null,"code":"import _classCallCheck from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbookpro/Desktop/universa_localis/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/universa_localis/src/Mrp/container/mrpForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { mrpNameUpdate, mrpDateUpdate } from \"../../actions/formActions/actions\";\nimport { Animated } from \"react-animated-css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { onOpen as _onOpen, onClose as _onClose, getMrp } from \"../../actions/formActions/actions\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\n\nvar styles = function styles(theme) {\n  return {\n    all: {\n      display: \"grid\",\n      justifyContent: \"center\",\n      marginBottom: \"4em\"\n    },\n    root: {\n      backgroundColor: \"rgba(200, 200, 200, .8)\",\n      minWidth: 200,\n      maxWidth: 400,\n      borderRadius: 20,\n      padding: \"2rem\"\n    },\n    form: {\n      position: \"relative\",\n      bottom: 30\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      width: \"90%\",\n      minWidth: \"13em\"\n    },\n    selectEmpty: {\n      marginTop: theme.spacing.unit * 2\n    },\n    header: {\n      fontFamily: \"Righteous\",\n      color: \"#E040FB\",\n      fontSize: \"3rem\",\n      marginTop: \"0.5em\",\n      marginBottom: \"1em\"\n    },\n    helper: {\n      color: \"#d8dcf2\",\n      fontSize: \"1.5rem\",\n      fontFamily: \"Quicksand\"\n    },\n    home: {\n      color: \"#d8dcf2\",\n      fontSize: \"2rem\",\n      fontFamily: \"Lobster, cursive\",\n      textDecoration: \"underline\",\n      textDecorationColor: \"#e040fb\",\n      float: \"left\"\n    },\n    buttonContainer: {\n      width: \"95%\",\n      display: \"block\"\n    },\n    button: {\n      marginTop: 20,\n      backgroundColor: \"#e040fb\"\n    }\n  };\n};\n\nvar MrpForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MrpForm, _Component);\n\n  function MrpForm() {\n    _classCallCheck(this, MrpForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MrpForm).apply(this, arguments));\n  }\n\n  _createClass(MrpForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: classes.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Animated, {\n        animationIn: \"fadeInRight\",\n        animationOut: \"fadeOut\",\n        isVisible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"home\",\n        className: classes.home,\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Universa Localis\")), React.createElement(\"div\", {\n        id: \"bb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"buttons\",\n        className: classes.buttons,\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Home\"), React.createElement(Button, {\n        id: \"buttons\",\n        className: classes.buttons,\n        href: \"about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"About\"), React.createElement(Button, {\n        id: \"buttons\",\n        className: classes.buttons,\n        href: \"contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Contact\"))), React.createElement(\"div\", {\n        className: classes.all,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: classes.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Mars Rover Photos\"), React.createElement(\"div\", {\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: classes.helper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Please select a rover and a date\"), React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Select Rover\"), React.createElement(Select, {\n        value: this.props.name,\n        onClose: function onClose() {\n          _this.props.dispatch(_onClose());\n        },\n        onOpen: function onOpen() {\n          _this.props.dispatch(_onOpen());\n        },\n        onChange: function onChange(event) {\n          var value = event.target.value;\n\n          _this.props.dispatch(mrpNameUpdate(value));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"curiosity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Curiosity\"), React.createElement(MenuItem, {\n        value: \"opportunity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Opportunity\"), React.createElement(MenuItem, {\n        value: \"spirit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Spirit\"))), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Select Date\",\n        type: \"date\",\n        InputLabelProps: {\n          shrink: true\n        },\n        value: this.props.date,\n        onClose: function onClose() {\n          _this.props.dispatch(_onClose());\n        },\n        onOpen: function onOpen() {\n          _this.props.dispatch(_onOpen());\n        },\n        onChange: function onChange(event) {\n          var value = event.target.value;\n\n          _this.props.dispatch(mrpDateUpdate(value));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        type: \"submit\",\n        onClick: function onClick() {\n          _this.props.dispatch(getMrp());\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Submit\"))))), React.createElement(BottomNavigation, {\n        showLabels: true,\n        id: \"footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"copyright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"\\xA9 copyright Mehmet Tansu I\\u015F\\u0131kl\\u0131\")));\n    }\n  }]);\n\n  return MrpForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  state = state.FormReducer;\n  return {\n    name: state.mrpForm.name,\n    date: state.mrpForm.date,\n    dialog_open: state.dialog_open\n  };\n};\n\nMrpForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar withstyles = withStyles(styles)(MrpForm);\nvar mrpFormConnected = connect(mapStateToProps)(withstyles);\nexport default mrpFormConnected;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/universa_localis/src/Mrp/container/mrpForm.js"],"names":["React","Component","connect","PropTypes","Toolbar","mrpNameUpdate","mrpDateUpdate","Animated","withStyles","MenuItem","InputLabel","FormControl","Select","Button","TextField","onOpen","onClose","getMrp","BottomNavigation","styles","theme","all","display","justifyContent","marginBottom","root","backgroundColor","minWidth","maxWidth","borderRadius","padding","form","position","bottom","formControl","margin","spacing","unit","width","selectEmpty","marginTop","header","fontFamily","color","fontSize","helper","home","textDecoration","textDecorationColor","float","buttonContainer","button","MrpForm","classes","props","buttons","name","dispatch","event","value","target","shrink","date","mapStateToProps","state","FormReducer","mrpForm","dialog_open","propTypes","object","isRequired","withstyles","mrpFormConnected"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {\n  mrpNameUpdate,\n  mrpDateUpdate\n} from \"../../actions/formActions/actions\";\nimport { Animated } from \"react-animated-css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { onOpen, onClose, getMrp } from \"../../actions/formActions/actions\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\n\nconst styles = theme => ({\n  all: {\n    display: \"grid\",\n    justifyContent: \"center\",\n    marginBottom: \"4em\"\n  },\n  root: {\n    backgroundColor: \"rgba(200, 200, 200, .8)\",\n    minWidth: 200,\n    maxWidth: 400,\n    borderRadius: 20,\n    padding: \"2rem\"\n  },\n  form: {\n    position: \"relative\",\n    bottom: 30\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    width: \"90%\",\n    minWidth: \"13em\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2\n  },\n  header: {\n    fontFamily: \"Righteous\",\n    color: \"#E040FB\",\n    fontSize: \"3rem\",\n    marginTop: \"0.5em\",\n    marginBottom: \"1em\"\n  },\n  helper: {\n    color: \"#d8dcf2\",\n    fontSize: \"1.5rem\",\n    fontFamily: \"Quicksand\"\n  },\n  home: {\n    color: \"#d8dcf2\",\n    fontSize: \"2rem\",\n    fontFamily: \"Lobster, cursive\",\n    textDecoration: \"underline\",\n    textDecorationColor: \"#e040fb\",\n    float: \"left\"\n  },\n  buttonContainer: {\n    width: \"95%\",\n    display: \"block\"\n  },\n  button: {\n    marginTop: 20,\n    backgroundColor: \"#e040fb\"\n  }\n});\n\nclass MrpForm extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <div id=\"container\">\n          <Toolbar className={classes.buttonContainer}>\n            <Animated\n              animationIn=\"fadeInRight\"\n              animationOut=\"fadeOut\"\n              isVisible={true}\n            >\n              <h1 id=\"home\" className={classes.home} href=\"/\">\n                Universa Localis\n              </h1>\n            </Animated>\n            <div id=\"bb\">\n              <Button id=\"buttons\" className={classes.buttons} href=\"/\">\n                Home\n              </Button>\n              <Button id=\"buttons\" className={classes.buttons} href=\"about\">\n                About\n              </Button>\n              <Button id=\"buttons\" className={classes.buttons} href=\"contact\">\n                Contact\n              </Button>\n            </div>\n          </Toolbar>\n\n          <div className={classes.all}>\n            <h1 className={classes.header}>Mars Rover Photos</h1>\n            <div className={classes.form}>\n              <p className={classes.helper}>Please select a rover and a date</p>\n              <div className={classes.root}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel>Select Rover</InputLabel>\n                  <Select\n                    value={this.props.name}\n                    onClose={() => {\n                      this.props.dispatch(onClose());\n                    }}\n                    onOpen={() => {\n                      this.props.dispatch(onOpen());\n                    }}\n                    onChange={event => {\n                      let value = event.target.value;\n                      this.props.dispatch(mrpNameUpdate(value));\n                    }}\n                  >\n                    <MenuItem value=\"curiosity\">Curiosity</MenuItem>\n                    <MenuItem value=\"opportunity\">Opportunity</MenuItem>\n                    <MenuItem value=\"spirit\">Spirit</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    label=\"Select Date\"\n                    type=\"date\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    value={this.props.date}\n                    onClose={() => {\n                      this.props.dispatch(onClose());\n                    }}\n                    onOpen={() => {\n                      this.props.dispatch(onOpen());\n                    }}\n                    onChange={event => {\n                      let value = event.target.value;\n                      this.props.dispatch(mrpDateUpdate(value));\n                    }}\n                  />\n                </FormControl>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  type=\"submit\"\n                  onClick={() => {\n                    this.props.dispatch(getMrp());\n                  }}\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <BottomNavigation showLabels id=\"footer\">\n          <p id=\"copyright\">© copyright Mehmet Tansu Işıklı</p>\n        </BottomNavigation>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  state = state.FormReducer;\n  return {\n    name: state.mrpForm.name,\n    date: state.mrpForm.date,\n    dialog_open: state.dialog_open\n  };\n};\n\nMrpForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst withstyles = withStyles(styles)(MrpForm);\nconst mrpFormConnected = connect(mapStateToProps)(withstyles);\nexport default mrpFormConnected;\n"]},"metadata":{},"sourceType":"module"}